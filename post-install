#!/usr/bin/env python
import os
import sys
import argparse
from core import PackagesInstaller, SourcesCreator, question, choose
from core import DISTRIBUTIONS, AREAS


# Argument Parser
help_line = 'Text files containing the packages to choose for installation'
description = 'Debian Post Installation Script' + \
              '\nWritten by Santiago Soler' + \
              '\nhttps://www.github.com/santis19/post_install'
parser = argparse.ArgumentParser(description=description)
parser.add_argument('pkgs_files', metavar='pkgs_file', type=str,
                    nargs='+', help=help_line, default='')
parser.add_argument('-y', '--yes', action='store_true',
                    help='Automatic yes to apt prompts')
args = parser.parse_args()


# Check running as root
if not os.getuid() == 0:
    sys.exit("\nPlease, run this script as root.\n")


# Welcome
os.system("clear")
script_title = ("""
Debian Post Installation Script
===============================""")
print script_title


# Sources creation
print "\nSources Creation"
print "----------------"
answer = question("Do you want to add repositories to sources.list?")
if answer:
    sources_creator = SourcesCreator()
    areas = []
    dists = choose(DISTRIBUTIONS, multichoice=True)
    print ""
    for area in AREAS:
        answer = question("Do you want to add " + area + "?")
        if answer:
            areas.append(area)
    overwrite = question("\nDo you want to create a new sources.list?" +
                         "\n(If no, the new lines will be appended to the " +
                         "existing sources.list)", default=False)
    sources_creator.add_repos(dists, areas, overwrite=overwrite)


# Update & Upgrade packages
print "\n\nUpdate and Upgrade Packages"
print "---------------------------"
update = question("Do you want to update package list? (apt-get update)")
upgrade = question("Do you want to upgrade packages? (apt-get upgrade)")
distupgrade = False
if upgrade:
    distupgrade = question("Do you want to dist-upgrade packages? " +
                           "(apt-get dist-upgrade)")


# Package Installation
print "\n\nPackage Installation"
print "--------------------"
installer = PackagesInstaller()
packages_files = args.pkgs_files
for packages_file in packages_files:
    line = "\nChoose packages from " + packages_file
    print line
    print "-"*len(line)
    installer.choose_packages(packages_file)


# Configurations
print "\n\nConfigurations"
print "--------------"
answer = question("\nShow users in lightdm?")
if answer:
    os.system('cat /usr/share/lightdm/lightdm.conf.d/' +
              '01_debian.conf | sed "s/greeter-hide-users=' +
              '.*/greeter-hide-users=false/g" | ' +
              'sudo tee /usr/share/lightdm/lightdm.conf.d/' +
              '01_debian.conf')


# Execution of orders
print "\n" + "#"*50
answer = question("\nProceed with choosen steps?")
if answer:
    if update:
        if args.yes:
            os.system("apt-get -y update")
        else:
            os.system("apt-get update")
    if upgrade and not distupgrade:
        if args.yes:
            os.system("apt-get -y upgrade")
        else:
            os.system("apt-get upgrade")
    if distupgrade:
        if args.yes:
            os.system("apt-get -y dist-upgrade")
        else:
            os.system("apt-get dist-upgrade")
    installer.install(yes=args.yes)
